{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","types/Error.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","title","completed","classNames","type","value","onClick","TodoFilter","searchInput","setSearchInput","setTodoByStatus","reset","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","fetchTodos","a","userId","userFormServer","href","email","name","ErrorApp","errorMessage","length","App","setTodos","todoByStatus","setErrorMessage","correctSearch","toLowerCase","trim","filteredTodos","filter","includes","todoFromServer","ReactDOM","render","document","getElementById"],"mappings":"mRAUaA,EAA4B,SAAH,GAI/B,IAHLC,EAAK,EAALA,MACAC,EAAe,EAAfA,gBACAC,EAAY,EAAZA,aAEA,OACE,wBAAOC,UAAU,+BAA8B,UAC7C,gCACE,+BACE,6BAAI,MACJ,6BACE,sBAAMA,UAAU,OAAM,SACpB,mBAAGA,UAAU,qBAGjB,6BAAI,UACJ,6BAAI,WAIR,gCACGH,EAAMI,KAAI,SAAAC,GACT,IACEC,EAGED,EAHFC,GACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,UAGF,OACE,qBACE,UAAQ,OACRL,UAAU,GAAE,UAGZ,oBAAIA,UAAU,eAAc,SAAEG,IAC9B,oBAAIH,UAAU,eAAc,SACzBK,GACC,sBAAML,UAAU,OAAO,UAAQ,gBAAe,SAC5C,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAA0B,SACtC,mBAAGA,UAAWM,IAAW,CACvB,mBAAoBD,EACpB,mBAAoBA,IACnB,SAEAD,MAGL,oBAAIJ,UAAU,8BAA6B,SACzC,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,MAAOL,EACPM,QAAS,kBAAOX,EAAgBI,IAAO,SAEvC,sBAAMF,UAAU,OAAM,SACpB,mBAAGA,UAAWM,IAAW,CACvB,mBAAoBP,IAAiBG,EACrC,aAAcH,IAAiBG,cA9BlCC,YChCNO,EAA8B,SAAH,GAKjC,IAJLC,EAAW,EAAXA,YACAC,EAAc,EAAdA,eACAC,EAAe,EAAfA,gBACAC,EAAK,EAALA,MAEA,OACE,uBAAMd,UAAU,mBAAkB,UAChC,mBAAGA,UAAU,UAAS,SACpB,sBAAMA,UAAU,SAAQ,SACtB,yBACE,UAAQ,eACRe,SAAU,SAACC,GAAK,OAAKH,EAAgBG,EAAMC,OAAOT,QAAO,UAEzD,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,SAAQ,SAAC,WACvB,wBAAQA,MAAM,YAAW,SAAC,qBAKhC,oBAAGR,UAAU,qDAAoD,UAC/D,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVkB,YAAY,YACZV,MAAOG,EACPI,SAAU,SAACC,GAAK,OAAMJ,EAAeI,EAAMC,OAAOT,UAEpD,sBAAMR,UAAU,eAAc,SAC5B,mBAAGA,UAAU,8BAGdW,GACC,sBAAMX,UAAU,gBAAgBmB,MAAO,CAAEC,cAAe,OAAQ,SAE9D,wBACE,UAAQ,oBACRb,KAAK,SACLP,UAAU,SACVS,QAASK,aChDVO,G,MAAmB,WAAH,OAC3B,qBAAKrB,UAAU,SAAS,UAAQ,SAAQ,SACtC,qBAAKA,UAAU,wBCSnB,SAASsB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAH,GAGhC,IAFLlC,EAAY,EAAZA,aACAD,EAAe,EAAfA,gBAEA,EAAwBoC,mBAAsB,MAAK,mBAA5CC,EAAI,KAAEC,EAAO,KAgBpB,OAVAC,qBAAU,WACR,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,sEDICC,ECHmBzC,EAAayC,ODGblB,EAAG,iBAAiBkB,ICHC,KAAD,EAAnDC,EAAc,OAEpBL,EAAQK,GAAgB,iCDCP,IAACD,ICDM,OACzB,kBAJe,mCAMhBF,MACC,IAGD,sBAAKtC,UAAU,kBAAkB,UAAQ,QAAO,UAC9C,qBAAKA,UAAU,qBAEbmC,EAGA,sBAAKnC,UAAU,aAAY,UACzB,yBAAQA,UAAU,kBAAiB,UACjC,qBACEA,UAAU,0CACV,UAAQ,eAAc,yBAEZD,EAAaI,MAIzB,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRS,QAnCM,WAChBX,EAAgB,YAsCV,sBAAKE,UAAU,kBAAiB,UAC9B,mBAAGA,UAAU,QAAQ,UAAQ,cAAa,SACvCD,EAAaK,QAGhB,oBAAGJ,UAAU,QAAQ,UAAQ,aAAY,UACrCD,EAAaM,UAGb,wBAAQL,UAAU,mBAAkB,SAAC,SAFrC,wBAAQA,UAAU,kBAAiB,SAAC,YAIrC,OAED,mBAAG0C,KAAI,iBAAYP,EAAKQ,OAAQ,SAC7BR,EAAKS,gBAlCd,cAAC,EAAM,QC7BFC,EAA4B,SAAH,GAG/B,IAFLhD,EAAK,EAALA,MACAiD,EAAY,EAAZA,aAEA,OACE,mCACqB,IAAjBjD,EAAMkD,QAAgBD,GACtB,sBAAK9C,UAAU,2CAA0C,UACvD,oBAAIA,UAAU,4BAA2B,SAAC,sCAG1C,oBAAGA,UAAU,4BAA2B,UAAC,8BAEvC,uBAAM,2GCRLgD,EAAgB,WAC3B,MAA0Bd,mBAAiB,IAAG,mBAAvCrC,EAAK,KAAEoD,EAAQ,KACtB,EAAsCf,mBAAiB,IAAG,mBAAnDvB,EAAW,KAAEC,EAAc,KAClC,EAAwCsB,mBAAiB,OAAM,mBAAxDgB,EAAY,KAAErC,EAAe,KACpC,EAAwCqB,mBAAsB,MAAK,mBAA5DnC,EAAY,KAAED,EAAe,KACpC,EAAwCoC,oBAAS,GAAM,mBAAhDY,EAAY,KAAEK,EAAe,KAE9BC,EAAgBzC,EAAY0C,cAAcC,OAC5CC,EAAa,YAAO1D,GAEpBuD,IACFG,EAAgBA,EACbC,QAAO,SAAAtD,GAAI,OAAIA,EAAKE,MAAMqD,SAASL,OAGnB,WAAjBF,IACFK,EAAgBA,EAAcC,QAAO,SAAAtD,GAAI,OAAKA,EAAKG,cAGhC,cAAjB6C,IACFK,EAAgBA,EAAcC,QAAO,SAAAtD,GAAI,OAAuB,IAAnBA,EAAKG,cAqBpD,OAdAgC,qBAAU,WACR,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,+EHhBOjB,EAAY,UGkBM,KAAD,EAAjCoC,EAAc,OAEpBT,EAASS,GAAgB,gDAEzBP,GAAgB,GAAM,yDAEzB,kBARe,mCAUhBb,MACC,IAGD,qCACE,qBAAKtC,UAAU,UAAS,SACtB,qBAAKA,UAAU,YAAW,SACxB,sBAAKA,UAAU,MAAK,UAClB,oBAAIA,UAAU,QAAO,SAAC,WAEtB,qBAAKA,UAAU,QAAO,SACpB,cAAC,EAAU,CACTW,YAAaA,EACbC,eAAgBA,EAChBsC,aAAcA,EACdrC,gBAAiBA,EACjBC,MA/BK,WACjBF,EAAe,SAkCP,sBAAKZ,UAAU,QAAO,UACF,IAAjBH,EAAMkD,QAAiBD,EAGpB,cAAC,EAAQ,CACPjD,MAAO0D,EACPzD,gBAAiBA,EACjBC,aAAcA,IALhB,cAAC,EAAM,IAQX,cAAC,EAAQ,CACPF,MAAOA,EACPiD,aAAcA,cAOvB/C,GACC,cAAC,EAAS,CACRA,aAAcA,EACdD,gBAAiBA,QCzF3B6D,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.bf0b0b44.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo) => void\n  selectedTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  value={id}\n                  onClick={() => (setSelectedTodo(todo))}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames({\n                      'far fa-eye-slash': selectedTodo === todo,\n                      'far fa-eye': selectedTodo !== todo,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Dispatch, SetStateAction } from 'react';\n\ntype Props = {\n  searchInput: string\n  setSearchInput: Dispatch<SetStateAction<string>>\n  todoByStatus: string\n  setTodoByStatus: Dispatch<SetStateAction<string>>\n  reset: () => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  searchInput,\n  setSearchInput,\n  setTodoByStatus,\n  reset,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setTodoByStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchInput}\n          onChange={(event) => (setSearchInput(event.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchInput && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { Dispatch, useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo\n  setSelectedTodo: Dispatch<React.SetStateAction<Todo | null>>\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const resetUser = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      const userFormServer = await getUser(selectedTodo.userId);\n\n      setUser(userFormServer);\n    };\n\n    fetchTodos();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={resetUser}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!selectedTodo.completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './Todo';\n\ntype Props = {\n  todos: Todo[],\n  errorMessage: boolean,\n};\n\nexport const ErrorApp: React.FC<Props> = ({\n  todos,\n  errorMessage,\n}) => {\n  return (\n    <>\n      {(todos.length === 0 && errorMessage) && (\n        <div className=\"notification is-danger has-text-centered\">\n          <h2 className=\"title is-1 has-text-black\">\n            This request unfortunately failed\n          </h2>\n          <p className=\"title is-5 has-text-black\">\n            We couldn&apos;t find your spec,\n            <br />\n            But we found other things instead!\n            Like change in the couch cushion\n            and a monster under the bed\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { ErrorApp } from './types/Error';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchInput, setSearchInput] = useState<string>('');\n  const [todoByStatus, setTodoByStatus] = useState<string>('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const correctSearch = searchInput.toLowerCase().trim();\n  let filteredTodos = [...todos];\n\n  if (correctSearch) {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title.includes(correctSearch));\n  }\n\n  if (todoByStatus === 'active') {\n    filteredTodos = filteredTodos.filter(todo => !todo.completed);\n  }\n\n  if (todoByStatus === 'completed') {\n    filteredTodos = filteredTodos.filter(todo => todo.completed === true);\n  }\n\n  const resetInput = () => {\n    setSearchInput('');\n  };\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const todoFromServer = await getTodos();\n\n        setTodos(todoFromServer);\n      } catch (error) {\n        setErrorMessage(true);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchInput={searchInput}\n                setSearchInput={setSearchInput}\n                todoByStatus={todoByStatus}\n                setTodoByStatus={setTodoByStatus}\n                reset={resetInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && !errorMessage\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n              <ErrorApp\n                todos={todos}\n                errorMessage={errorMessage}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}